<log4net>
  <!--LEVELS: ALL, DEBUG, INFO, WARN, ERROR, FATAL, OFF-->
  <!--ALL = DEBUG, INFO, WARN, ERROR, FATAL-->
  <!--DEBUG = DEBUG, INFO, WARN, ERROR, FATAL-->
  <!--INFO = INFO, WARN, ERROR, FATAL-->
  <!--WARN = WARN, ERROR, FATAL-->
  <!--ERROR = ERROR, FATAL-->
  <!--FATAL = FATAL-->
  <!--OFF = none-->
  <root>
    <level value="ALL" />
    <appender-ref ref="ManagedColoredConsoleAppender" />
    <appender-ref ref="FileAppender"/>
  </root>

  <appender name="FileAppender" type="log4net.Appender.FileAppender">
    <file value="SharesGainLossTrackerLog.txt" />
    <appendToFile value="true" />
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date{ISO8601}: [%level] %message%newline" />
    </layout>
  </appender>

  <appender name="ManagedColoredConsoleAppender" type="log4net.Appender.ManagedColoredConsoleAppender">
    <mapping>
      <level value="DEBUG" />
      <forecolor value="Blue" />
    </mapping>
    <mapping>
      <level value="INFO" />
      <forecolor value="Green" />
    </mapping>
    <mapping>
      <level value="WARN" />
      <foreColor value="Yellow" />
    </mapping>
    <mapping>
      <level value="ERROR" />
      <foreColor value="Red" />
      <!--<foreColor value="White" />-->
      <!--<backColor value="Red" />-->
    </mapping>
    <!--FATAL will inherit ERROR mapping.-->
    <layout type="log4net.Layout.PatternLayout">
      <!-- Controls exception output, i.e. Log.Error("Whoops!", ex); only ouputs "Whoops!".-->
      <IgnoresException value="False" />
      <conversionPattern value="%date{ISO8601}: [%level] %message%newline"/>
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <!--Writes levels: DEBUG, INFO, WARN, ERROR.  Ignores levels: FATAL.-->
      <!--Writes levels: DEBUG, INFO, WARN, ERROR, FATAL.-->
      <levelMin value="DEBUG" />
      <levelMax value="FATAL" />
    </filter>
  </appender>
</log4net>